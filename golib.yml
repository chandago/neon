# NeON Build File (http://github.com/c4s4/neon)

doc: Build file for Go library projects
default: [lint, test]
extends: chandago/neon/golang.yml

properties:
  BUILD_OPTIONS: []
  TEST_OPTIONS: []
  TEST_PACKAGE: './...'
  COVER_PACKAGE: './...'
  EXAMPLE: 'integ/cmd/example/main.go'

targets:

  test:
    doc: "Run unit tests"
    depends: start
    steps:
    - $: [dotenv, --, go, test]
      +: =BUILD_OPTIONS+TEST_OPTIONS+TEST_PACKAGE
    - call: stop

  integ:
    doc: "Run integration tests"
    depends: start
    steps:
    - mkdir: =BUILD_DIR
    - $: [dotenv, --, go, test, '-coverpkg=={COVER_PACKAGE}', -cover]
      +: =BUILD_OPTIONS+TEST_OPTIONS+TEST_PACKAGE
    - call: stop

  integ-cover:
    doc: "Run integration tests with coverage report"
    depends: start
    steps:
    - mkdir: =BUILD_DIR
    - $: [dotenv, --, go, test, -coverpkg, =COVER_PACKAGE, -coverprofile, '={BUILD_DIR}/cover.out']
      +: =BUILD_OPTIONS+TEST_OPTIONS+TEST_PACKAGE
    - $: [go, tool, cover, -html, '={BUILD_DIR}/cover.out', -o, '={BUILD_DIR}/coverage.html']
    - 'url =  "file://" + _BASE + "/" + BUILD_DIR + "/coverage.html"'
    - print: 'Coverage report generated at ={color("blue", termlink(url, ""))}'
    - call: stop

  example:
    doc: "Run example program"
    depends: start
    steps:
    - $: [dotenv, go, run, =EXAMPLE]
    - call: stop

  start:
    doc: "Start tool"
    depends: stop
    steps:
    - try:
      - $: [docker, network, create, =NAME]
    - $: [docker, compose, create, =NAME]
    - $: [docker, compose, start, =NAME]
    - 'stop = false'
    - while: '!stop'
      do:
      - try:
        - call: ping
        - 'stop = true'
        catch:
        - sleep: 1.0

  ping:
    doc: "Call tool to check if it is running"
    steps:
    - print: "Checking if tool is running..."

  stop:
    doc: "Stop tool"
    steps:
    - $: [docker, compose, down]
